getwd()
setwd("GitHub/R-Course/PROYECTOS/TEMA 1/")
library(mice)
detach("package:mice", unload = TRUE)
library(mice)
housing.data <- read.csv("DATA/housing-with-missing-value.csv",
header =TRUE,
stringsAsFactors = FALSE)
columns <- c("ptratio","rad")
imputed_data <-
mice(housing.data
[,names(housing.data) %in% columns],
m = 5,
maxit = 50,
method ="pmm",
seed = 2018)
View(imputed_data)
summary(imputed_data)
complete.data <- mice::complete(imputed_data)
View(complete.data)
housing.data$ptratio <- complete.data$ptratio
housing.data$rad <- complete.data$rad
anyNA(housing.data)
housing.data <- read.csv("DATA/housing-with-missing-value.csv",
header =TRUE,
stringsAsFactors = FALSE)
impute_arg <- aregImpute(~ptratio + rad, data =housing.data, n.impute =5)
library(Hmisc)
impute_arg <- aregImpute(~ptratio + rad, data =housing.data, n.impute =5)
View(impute_arg)
impute_arg <- aregImpute(~ptratio + rad, data =housing.data, n.impute =5)
impute_arg
impute_arg$imputed$rad
ozone.data <- read.csv("DATA/ozone.csv"
, stringsAsFactors =  F)
View(ozone.data)
View(ozone.data)
outlier_values <-boxplot(ozone.data$pressure_height)$out
boxplot(ozone.data$pressure_height,
main ="Pressue Height",
)
boxplot(ozone.data$pressure_height,
main ="Pressue Height",
)
boxplot(ozone.data$pressure_height,
main ="Pressue Height",
boxwex =0,1)
boxplot(ozone.data$pressure_height,
main ="Pressue Height",
boxwex =0.5)
summary(ozone.data)
summary(ozone.data$pressure_height)
boxplot(ozone.data$pressure_height ~ ozone.data$Month)
boxplot(pressure_height ~ Month,
data = ozone.data,
main = "Pressure Height per Month")
boxplot(ozone_reading ~ Month,
data = ozone.data,
main "Ozone Reading per Month")
boxplot(ozone_reading ~ Month,
data = ozone.data,
main = "Ozone Reading per Month")
boxplot(ozone_reading ~ Month,
data = ozone.data,
main = "Ozone Reading per Month")$out
boxplot(pressure_height ~ Month,
data = ozone.data,
main = "Pressure Height per Month")$out
boxplot(ozone.data$pressure_height,
main ="Pressue Height",
boxwex =0.5)$out
mtext(boxplot(ozone.data$pressure_height,
main ="Pressue Height",
boxwex =0.5)$out)
outlier_values<-boxplot(ozone.data$pressure_height,
main ="Pressue Height",
boxwex =0.5)$out
mtext(outlier_values)
mtext(outlier_values, side =3)
impute_outliers <- function(x, removeNA =TRUE){
quantiles <- quantile(x, c(0.05,0.95),na.rm =removeNA)
x[x<quantile[1]]<-mean(x,na.rm =removeNA )
x[x>quantile[2]]<-median(x,na.rm =removeNA)
}
imputed_data <- impute_outliers(ozone.data$pressure_height)
impute_outliers <- function(x, removeNA =TRUE){
quantiles <- quantile(x, c(0.05,0.95),na.rm =removeNA)
x[x<quantiles[1]]<-mean(x,na.rm =removeNA )
x[x>quantiles[2]]<-median(x,na.rm =removeNA)
}
imputed_data <- impute_outliers(ozone.data$pressure_height)
par(mfrow = c(1,2))
boxplot(ozone.data$pressure_height, main ="Presión con outliers")
boxplot(ozone.data$pressure_height, main ="Presión con outliers")
boxplot(imputed_data, main ="Presión sin outliers")
impute_outliers <- function(x, removeNA =TRUE){
quantiles <- quantile(x, c(0.05,0.95),na.rm =removeNA)
x[x<quantiles[1]]<-mean(x,na.rm =removeNA )
x[x>quantiles[2]]<-median(x,na.rm =removeNA)
x
}
imputed_data <- impute_outliers(ozone.data$pressure_height)
par(mfrow = c(1,2))
boxplot(ozone.data$pressure_height, main ="Presión con outliers")
boxplot(imputed_data, main ="Presión sin outliers")
replace_outliers <- function(x, removeNA =TRUE){
qrts<- quantile(x,probs = c(0.05,0.95),na.rm =removeNA)
caps<- quantile(x,probs = c(0.05,0.95),na.rm =removeNA)
iqr <- qrts[2]-qrts[1]
H <-1.5 * iqr
x[x<qrts[1]-h]<-caps[1]
x[x>qrts[2]+h]<-caps[2]
x
}
par(mfrow = c(1,2))
boxplot(ozone.data$pressure_height, main ="Presión con outliers")
capped_pressure_height <- replace_outliers(ozone.data$pressure_height)
replace_outliers <- function(x, removeNA =TRUE){
qrts<- quantile(x,probs = c(0.05,0.95),na.rm =removeNA)
caps<- quantile(x,probs = c(0.05,0.95),na.rm =removeNA)
iqr <- qrts[2]-qrts[1]
h <-1.5 * iqr
x[x<qrts[1]-h]<-caps[1]
x[x>qrts[2]+h]<-caps[2]
x
}
capped_pressure_height <- replace_outliers(ozone.data$pressure_height)
par(mfrow = c(1,2))
boxplot(ozone.data$pressure_height, main ="Presión con outliers")
boxplot(capped_pressure_height, main = "Presión con outliers capados")
replace_outliers <- function(x, removeNA =TRUE){
qrts<- quantile(x,probs = c(0.05,0.95),na.rm =removeNA)
caps<- quantile(x,probs = c(0.05,0.95),na.rm =removeNA)
iqr <- qrts[2]-qrts[1]
h <-1.5 * iqr
x[x<qrts[1]-h]<-caps[1]
x[x>qrts[2]+h]<-caps[2]
x
}
capped_pressure_height <- replace_outliers(ozone.data$pressure_height)
summary(capped_pressure_height)
capped_pressure_height <- replace_outliers(ozone.data$pressure_height,TRUE)
summary(capped_pressure_height)
replace_outliers <- function(x, removeNA =TRUE){
qrts<- quantile(x,probs = c(0.05,0.75),na.rm =removeNA)
caps<- quantile(x,probs = c(0.05,0.95),na.rm =removeNA)
iqr <- qrts[2]-qrts[1]
h <-1.5 * iqr
x[x<qrts[1]-h]<-caps[1]
x[x>qrts[2]+h]<-caps[2]
x
}
capped_pressure_height <- replace_outliers(ozone.data$pressure_height,TRUE)
summary(capped_pressure_height)
par(mfrow = c(1,2))
boxplot(ozone.data$pressure_height, main ="Presión con outliers")
boxplot(capped_pressure_height, main = "Presión con outliers capados")
replace_outliers <- function(x, removeNA =TRUE){
qrts<- quantile(x,probs = c(0.25,0.75),na.rm =removeNA)
caps<- quantile(x,probs = c(0.05,0.95),na.rm =removeNA)
iqr <- qrts[2]-qrts[1]
h <-1.5 * iqr
x[x<qrts[1]-h]<-caps[1]
x[x>qrts[2]+h]<-caps[2]
x
}
replace_outliers <- function(x, removeNA =TRUE){
qrts<- quantile(x,probs = c(0.25,0.75),na.rm =removeNA)
caps<- quantile(x,probs = c(0.05,0.95),na.rm =removeNA)
iqr <- qrts[2]-qrts[1]
h <-1.5 * iqr
x[x<qrts[1]-h]<-caps[1]
x[x>qrts[2]+h]<-caps[2]
x
}
capped_pressure_height <- replace_outliers(ozone.data$pressure_height,TRUE)
summary(capped_pressure_height)
par(mfrow = c(1,2))
boxplot(ozone.data$pressure_height, main ="Presión con outliers")
boxplot(ozone.data$pressure_height, main ="Presión con outliers")
boxplot(ozone.data$pressure_height, main ="Presión con outliers")
boxplot(capped_pressure_height, main = "Presión con outliers capados")
crime.data <- read.csv("DATA/USArrests.csv",
stringsAsFactors = FALSE,
header = TRUE)
View(crime.data)
View(crime.data)
crime.data <- cbind(state = rownames(crime.data),crime.data)
crime.data <- cbind(state = rownames(crime.data),crime.data)
crime.data <- read.csv("DATA/USArrests.csv",
stringsAsFactors = FALSE,
header = TRUE)
crime.data <- cbind(state = rownames(crime.data),crime.data)
View(crime.data)
crime.data.1 <- gather(crime.data,
key = "crime_type",
value= "arrest_estimate",
Murder : UrbanPop)
install.packages("tidyr")
library(tidyr)
auto <-read.csv("TEMA 1/DATA/auto-mpg.csv",header = TRUE, sep = ",", strings.na ="",  stringsAsFactors = FALSE)
names(auto)
auto_no_header <-read.csv("TEMA 1/DATA/auto-mpg-noheader.csv", header = FALSE, sep =",")
getwd()
auto <-read.csv("DATA/auto-mpg.csv",header = TRUE, sep = ",", strings.na ="",  stringsAsFactors = FALSE)
.csv("DATA/auto-mpg.csv",header = TRUE, sep = ",",  stringsAsFactors = FALSE)
names(auto)
auto <-read.csv("DATA/auto-mpg.csv",header = TRUE, sep = ",",  stringsAsFactors = FALSE)
names(auto)
auto_no_header <-read.csv("DATA/auto-mpg-noheader.csv", header = FALSE, sep =",")
head(auto_no_header,4)
head(auto_no_header,8)
read.csv("TEMA 1/DATA/auto-mpg-noheader.csv",
header = FALSE,
col.names= c("numero","millas_por_galeon","cilindrada",
"desplazamiento","caballos_de_potencia","peso",
"aceleracion","año","modelo")
)
auto_custom_header <-
read.csv("DATA/auto-mpg-noheader.csv",
header = FALSE,
col.names= c("numero","millas_por_galeon","cilindrada",
"desplazamiento","caballos_de_potencia","peso",
"aceleracion","año","modelo")
)
head(auto_custom_header,2)
source('~/GitHub/R-Course/PROYECTOS/TEMA 1/SCRIPTS/6-missing-data.R', echo=TRUE)
data <- read.csv("DATA/missing-data.csv", na.strings = "")
data.cleaned <-na.omit(data)
is.na(data$Income)
data <- read.csv("DATA/missing-data.csv", na.strings = "")
data[!is.na(data$Income),]
complete.cases(data)
data.cleaned.2 <-data[complete.cases(data),]
View(data.cleaned.2)
view(data)
View(data)
#Medidas de centralización y dispersión
mean(data$Income)
mean(data$Income, na.rm = TRUE)
data <- read.csv("DATA/missing-data.csv", na.strings ="")
getwd()
data <- read.csv("/DATA/missing-data.csv", na.strings ="")
source('~/GitHub/R-Course/PROYECTOS/TEMA 1/SCRIPTS/7-replace-missing.R', echo=TRUE)
data <- read.csv("DATA/missing-data.csv", na.strings ="")
data$Income.mean
data$Income.mean <- ifelse(is.na((data$Income)),
mean(data$Income, na.rm =TRUE),
data$Income
)
data$Income.mean
suma <- function(z,y){
x+y
}
#x es un vector que puede contener NA
rand.impute <- function(m){
#vector con booleano de un NA existente
missing <- is.na(m)
#n.missing contiene cuantos valores son N/A
n.missing <- sum(missing)
#x.obs son los valores que tienen datos diferente de NA en x
x.obs <- m[!missing]
#por defecto, devolcere lo mismo que había entrado por parámetro
imputed <- m
#en los valores faltantes se reemplazan por muestra de los que sí se conocen
imputed[missing] <- sample(x.obs,n.missing, replace =TRUE)
return(imputed)
}
rand.impute(data)
data <- read.csv("DATA/missing-data.csv", na.strings ="")
rand.impute(data)
random.impute.data.frame <- function(dataframe, cols){
names <- names(dataframe)
for(col in cols){
name <- paste(names[col],".imputed", sep ="" )
dataframe[name] = rand.impute(dataframe[,col])
}
dataframe
}
data <- random.impute.data.frame(data,c(1,2))
View(data)
View(data)
